
{
  "openapi": "3.0.0",
  "info": {
    "description": "Clean SMRs API provides endpoints to store and retrieve observations for data analysis in supporting environmentally sustainable energy solutions for AI data centers.",
    "version": "1.0.0",
    "title": "Clean SMRs API",
    "contact": {
      "email": "info@cleansmrs.org"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "paths": {
    "/observations": {
      "get": {
        "summary": "Retrieve all observations",
        "operationId": "getObservations",
        "responses": {
          "200": {
            "description": "A list of observations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Observation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new observation",
        "operationId": "createObservation",
        "requestBody": {
          "description": "Observation details to add",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Observation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Observation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Observation"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/observation/{observation_id}": {
      "get": {
        "summary": "Retrieve a specific observation",
        "operationId": "getObservation",
        "parameters": [
          {
            "name": "observation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Observation details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Observation"
                }
              }
            }
          },
          "404": {
            "description": "Observation not found"
          }
        }
      },
      "patch": {
        "summary": "Update a specific observation",
        "operationId": "patchObservation",
        "parameters": [
          {
            "name": "observation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Observation details to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Observation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Observation updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Observation"
                }
              }
            }
          },
          "404": {
            "description": "Observation not found"
          }
        }
      },
      "put": {
        "summary": "Replace a specific observation",
        "operationId": "updateObservation",
        "parameters": [
          {
            "name": "observation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Observation details to replace",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Observation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Observation replaced successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Observation"
                }
              }
            }
          },
          "404": {
            "description": "Observation not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a specific observation",
        "operationId": "deleteObservation",
        "parameters": [
          {
            "name": "observation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Observation deleted successfully"
          },
          "404": {
            "description": "Observation not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Observation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the observation"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date of observation (ISO 8601 format)"
          },
          "time": {
            "type": "string",
            "format": "time",
            "description": "Time of observation (ISO 8601 format)"
          },
          "timeZoneOffset": {
            "type": "string",
            "description": "Time zone offset (e.g., UTC-10:00)"
          },
          "coordinates": {
            "type": "string",
            "description": "Geographic coordinates in decimal degrees"
          },
          "temperatureWater": {
            "type": "number",
            "format": "float",
            "description": "Water temperature in Celsius"
          },
          "temperatureAir": {
            "type": "number",
            "format": "float",
            "description": "Ambient air temperature in Celsius"
          },
          "humidity": {
            "type": "number",
            "description": "Humidity in grams per kilogram"
          },
          "windSpeed": {
            "type": "number",
            "description": "Wind speed in kilometers per hour"
          },
          "windDirection": {
            "type": "number",
            "description": "Wind direction in decimal degrees"
          },
          "precipitation": {
            "type": "number",
            "description": "Precipitation in millimeters"
          },
          "haze": {
            "type": "number",
            "description": "Haze percentage"
          },
          "becquerel": {
            "type": "number",
            "description": "Radioactivity measurement in becquerels (Bq)"
          },
          "notes": {
            "type": "string",
            "description": "Additional notes about the observation"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "deleted": {
            "type": "string",
            "format": "date-time",
            "description": "Deletion timestamp"
          }
        },
        "required": ["date", "time", "coordinates"]
      }
    }
  }
}